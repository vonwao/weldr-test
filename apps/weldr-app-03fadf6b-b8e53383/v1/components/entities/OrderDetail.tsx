'use client';

// @generated by Weldr.dev â€” detail component managed. Adjust field rendering inside @custom regions to keep generator updates.
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Edit, Trash2 } from 'lucide-react';
import type { Order } from '@/lib/types';

interface OrderDetailProps {
  item: Order | null;
  onEdit?: () => void;
  onDelete?: () => void;
  isDeleting?: boolean;
}

export function OrderDetail({ item, onEdit, onDelete, isDeleting = false }: OrderDetailProps) {
  if (!item) {
    return (
      <Card>
        <CardHeader>
          <CardTitle>Order Details</CardTitle>
          <CardDescription>Select a record to view details.</CardDescription>
        </CardHeader>
        <CardContent>
          <p className="text-sm text-muted-foreground">No order selected.</p>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card>
      <CardHeader>
        <div className="flex justify-between items-start gap-4">
          <div>
            <CardTitle>Order Details</CardTitle>
            <CardDescription>ID: {item.id}</CardDescription>
          </div>
          <div className="flex gap-2">
            <Button size="sm" variant="outline" onClick={onEdit}>
              <Edit className="mr-2 h-4 w-4" />
              Edit
            </Button>
            <Button size="sm" variant="destructive" onClick={onDelete} disabled={isDeleting}>
              <Trash2 className="mr-2 h-4 w-4" />
              {isDeleting ? 'Removing...' : 'Delete'}
            </Button>
          </div>
        </div>
      </CardHeader>
      <CardContent>
        <dl className="grid grid-cols-1 gap-4 sm:grid-cols-2">
          <div>
            <dt className="text-sm font-medium text-muted-foreground">Order Number</dt>
            <dd className="mt-1 text-sm">{item.orderNumber}</dd>
          </div>
          <div>
            <dt className="text-sm font-medium text-muted-foreground">Status</dt>
            <dd className="mt-1 text-sm">{item.status}</dd>
          </div>
          <div>
            <dt className="text-sm font-medium text-muted-foreground">Total Amount</dt>
            <dd className="mt-1 text-sm">{item.totalAmount}</dd>
          </div>
          <div>
            <dt className="text-sm font-medium text-muted-foreground">Order Date</dt>
            <dd className="mt-1 text-sm">{item.orderDate}</dd>
          </div>
          <div>
            <dt className="text-sm font-medium text-muted-foreground">Created</dt>
            <dd className="mt-1 text-sm">{new Date(item.createdAt).toLocaleString()}</dd>
          </div>
          <div>
            <dt className="text-sm font-medium text-muted-foreground">Updated</dt>
            <dd className="mt-1 text-sm">{new Date(item.updatedAt).toLocaleString()}</dd>
          </div>
        </dl>
      </CardContent>
    </Card>
  );
}
