// @generated by Weldr.dev â€” drizzle schema managed. Regenerate via Weldr.dev before editing; copy to a custom module for manual changes.

import { boolean, pgTable, primaryKey, text, timestamp, uuid } from 'drizzle-orm/pg-core';

import { relations } from 'drizzle-orm';

export const product = pgTable('product', {
  description: text('description'),
  id: uuid('id').defaultRandom().primaryKey(),
  inStock: boolean('in_stock').default(true),
  name: text('name').notNull(),
  price: text('price').notNull(),
});

export const order = pgTable('order', {
  id: uuid('id').defaultRandom().primaryKey(),
  orderDate: timestamp('order_date', { withTimezone: true }).notNull().defaultNow(),
  orderNumber: text('order_number').notNull().unique(),
  status: text('status'),
  totalAmount: text('total_amount'),
});

export const orderProduct = pgTable('order_product', {
  orderId: uuid('order_id').notNull().references(() => order.id),
  productId: uuid('product_id').notNull().references(() => product.id),
}, (table) => ({ pk: primaryKey({ columns: [table.orderId, table.productId] }) }));

export const orderRelations = relations(order, ({ many }) => ({
  orderProductLinks: many(orderProduct),
}));

export const orderProductRelations = relations(orderProduct, ({ one }) => ({
  order: one(order, { fields: [orderProduct.orderId], references: [order.id] }),
  product: one(product, { fields: [orderProduct.productId], references: [product.id] }),
}));

export const productRelations = relations(product, ({ many }) => ({
  orderProductLinks: many(orderProduct),
}));